import { useLocation, Link } from 'react-router-dom';
import { useState } from 'react';
import { useDispatch,useSelector } from 'react-redux';
import { setSidebar } from '../../redux/actions';


export default function Sidebar() {

  const dispatch = useDispatch();
  const sidebar = useSelector(state => state.sidebar);
  const navbar = useSelector(state => state.navbar);
  const location = useLocation();
  const [openIndex, setOpenIndex] = useState(null);
  const [openSubIndex, setOpenSubIndex] = useState(null);

  const navItems = [
    { path: '/', label: 'مالی', icon: 'M17 3.5H7C4 3.5 2 5 2 8.5V15.5C2 19 4 20.5 7 20.5H17C20 20.5 22 19 22 15.5V8.5C22 5 20 3.5 17 3.5ZM3.75 8.5C3.75 6.71 5.21 5.25 7 5.25H8.5C8.91 5.25 9.25 5.59 9.25 6C9.25 6.41 8.91 6.75 8.5 6.75H7C6.04 6.75 5.25 7.54 5.25 8.5V10C5.25 10.41 4.91 10.75 4.5 10.75C4.09 10.75 3.75 10.41 3.75 10V8.5ZM8.5 18.75H7C5.21 18.75 3.75 17.29 3.75 15.5V14C3.75 13.59 4.09 13.25 4.5 13.25C4.91 13.25 5.25 13.59 5.25 14V15.5C5.25 16.46 6.04 17.25 7 17.25H8.5C8.91 17.25 9.25 17.59 9.25 18C9.25 18.41 8.91 18.75 8.5 18.75ZM12 15C10.34 15 9 13.66 9 12C9 10.34 10.34 9 12 9C13.66 9 15 10.34 15 12C15 13.66 13.66 15 12 15ZM20.25 15.5C20.25 17.29 18.79 18.75 17 18.75H15.5C15.09 18.75 14.75 18.41 14.75 18C14.75 17.59 15.09 17.25 15.5 17.25H17C17.96 17.25 18.75 16.46 18.75 15.5V14C18.75 13.59 19.09 13.25 19.5 13.25C19.91 13.25 20.25 13.59 20.25 14V15.5ZM20.25 10C20.25 10.41 19.91 10.75 19.5 10.75C19.09 10.75 18.75 10.41 18.75 10V8.5C18.75 7.54 17.96 6.75 17 6.75H15.5C15.09 6.75 14.75 6.41 14.75 6C14.75 5.59 15.09 5.25 15.5 5.25H17C18.79 5.25 20.25 6.71 20.25 8.5V10Z', activeColor: '#26397F', inactiveColor: '#828892' },
    { path: '/consultants', label: 'مشاورین', icon: ['M17.53 7.77C17.46 7.76 17.39 7.76 17.32 7.77C15.77 7.72 14.54 6.45 14.54 4.89C14.54 3.3 15.83 2 17.43 2C19.02 2 20.32 3.29 20.32 4.89C20.31 6.45 19.08 7.72 17.53 7.77Z','M20.7901 14.7004C19.6701 15.4504 18.1001 15.7304 16.6501 15.5404C17.0301 14.7204 17.2301 13.8104 17.2401 12.8504C17.2401 11.8504 17.0201 10.9004 16.6001 10.0704C18.0801 9.8704 19.6501 10.1504 20.7801 10.9004C22.3601 11.9404 22.3601 13.6504 20.7901 14.7004Z','M6.43991 7.77C6.50991 7.76 6.57991 7.76 6.64991 7.77C8.19991 7.72 9.42991 6.45 9.42991 4.89C9.42991 3.29 8.13991 2 6.53991 2C4.94991 2 3.65991 3.29 3.65991 4.89C3.65991 6.45 4.88991 7.72 6.43991 7.77Z','M6.55012 12.8496C6.55012 13.8196 6.76012 14.7396 7.14012 15.5696C5.73012 15.7196 4.26012 15.4196 3.18012 14.7096C1.60012 13.6596 1.60012 11.9496 3.18012 10.8996C4.25012 10.1796 5.76012 9.88962 7.18012 10.0496C6.77012 10.8896 6.55012 11.8396 6.55012 12.8496Z','M12.12 15.87C12.04 15.86 11.95 15.86 11.86 15.87C10.02 15.81 8.55005 14.3 8.55005 12.44C8.56005 10.54 10.09 9 12 9C13.9 9 15.44 10.54 15.44 12.44C15.43 14.3 13.97 15.81 12.12 15.87Z','M8.87005 17.9396C7.36005 18.9496 7.36005 20.6096 8.87005 21.6096C10.59 22.7596 13.41 22.7596 15.13 21.6096C16.64 20.5996 16.64 18.9396 15.13 17.9396C13.42 16.7896 10.6 16.7896 8.87005 17.9396Z'], activeColor: '#26397F', inactiveColor: '#828892' },
    { path: '/settings', label: 'تنظیمات',  icon: 'M11.9349 9.15449C11.2342 9.15449 10.5779 9.42637 10.081 9.92324C9.58651 10.4201 9.31229 11.0764 9.31229 11.7771C9.31229 12.4779 9.58651 13.1342 10.081 13.6311C10.5779 14.1256 11.2342 14.3998 11.9349 14.3998C12.6357 14.3998 13.292 14.1256 13.7889 13.6311C14.2834 13.1342 14.5576 12.4779 14.5576 11.7771C14.5576 11.0764 14.2834 10.4201 13.7889 9.92324C13.5462 9.67869 13.2573 9.4848 12.939 9.35283C12.6208 9.22085 12.2795 9.15344 11.9349 9.15449ZM21.5982 14.674L20.0654 13.3639C20.1381 12.9186 20.1756 12.4639 20.1756 12.0115C20.1756 11.5592 20.1381 11.1021 20.0654 10.6592L21.5982 9.34902C21.714 9.2499 21.7969 9.11787 21.8358 8.97051C21.8748 8.82314 21.8679 8.66741 21.8162 8.52402L21.7951 8.46309C21.3733 7.28345 20.7412 6.19001 19.9295 5.23574L19.8873 5.18652C19.7887 5.07063 19.6574 4.98732 19.5105 4.94757C19.3636 4.90783 19.2082 4.91351 19.0646 4.96387L17.1615 5.64121C16.4584 5.06465 15.6756 4.60996 14.8271 4.29356L14.4592 2.30371C14.4314 2.15381 14.3587 2.0159 14.2507 1.90832C14.1427 1.80073 14.0045 1.72855 13.8545 1.70137L13.7912 1.68965C12.5724 1.46934 11.2881 1.46934 10.0693 1.68965L10.006 1.70137C9.85603 1.72855 9.71785 1.80073 9.60984 1.90832C9.50183 2.0159 9.42912 2.15381 9.40135 2.30371L9.03104 4.30293C8.19064 4.62186 7.40775 5.07544 6.71307 5.6459L4.79588 4.96387C4.65237 4.91311 4.4968 4.90722 4.34986 4.94699C4.20291 4.98676 4.07155 5.07031 3.97323 5.18652L3.93104 5.23574C3.12079 6.19103 2.48886 7.2842 2.06542 8.46309L2.04432 8.52402C1.93885 8.81699 2.02557 9.14512 2.26229 9.34902L3.81385 10.6732C3.7412 11.1139 3.70604 11.5639 3.70604 12.0092C3.70604 12.4592 3.7412 12.9092 3.81385 13.3451L2.26698 14.6693C2.15119 14.7685 2.06831 14.9005 2.02938 15.0479C1.99044 15.1952 1.99729 15.351 2.04901 15.4943L2.0701 15.5553C2.49432 16.7342 3.1201 17.824 3.93573 18.7826L3.97792 18.8318C4.07648 18.9477 4.20785 19.031 4.3547 19.0708C4.50156 19.1105 4.65701 19.1049 4.80057 19.0545L6.71776 18.3725C7.4162 18.9467 8.19432 19.4014 9.03573 19.7154L9.40604 21.7147C9.4338 21.8646 9.50652 22.0025 9.61453 22.11C9.72253 22.2176 9.86072 22.2898 10.0107 22.317L10.074 22.3287C11.3047 22.5502 12.5651 22.5502 13.7959 22.3287L13.8592 22.317C14.0092 22.2898 14.1474 22.2176 14.2554 22.11C14.3634 22.0025 14.4361 21.8646 14.4639 21.7147L14.8318 19.7248C15.6803 19.4061 16.4631 18.9537 17.1662 18.3771L19.0693 19.0545C19.2128 19.1053 19.3684 19.1111 19.5153 19.0714C19.6623 19.0316 19.7937 18.9481 19.892 18.8318L19.9342 18.7826C20.7498 17.8193 21.3756 16.7342 21.7998 15.5553L21.8209 15.4943C21.9217 15.2037 21.8349 14.8779 21.5982 14.674ZM11.9349 15.8975C9.65917 15.8975 7.81464 14.0529 7.81464 11.7771C7.81464 9.50137 9.65917 7.65684 11.9349 7.65684C14.2107 7.65684 16.0553 9.50137 16.0553 11.7771C16.0553 14.0529 14.2107 15.8975 11.9349 15.8975Z', activeColor: '#26397F', inactiveColor: '#828892', subset:[
      {label: 'لیدز', path: '/settings/leeds'},
      {label: 'مورد دوم', path: '#'},
      {label: 'مورد سوم', path: '#'},
    ] },
    { path: '/complaints', label: 'شکایات', icon: ['M2.08828 0H17.9109C18.4535 0.0191406 18.9867 0.245703 19.368 0.633594C19.7535 1.01484 19.9789 1.5457 20 2.08633V13.7289C19.9738 14.3441 19.6773 14.9414 19.1949 15.3254C18.8094 15.641 18.3109 15.8074 17.8137 15.8039C16.1672 15.8055 14.5207 15.8051 12.8742 15.8043C12.309 16.9219 11.7559 18.0453 11.1906 19.1629C10.9723 19.5832 10.5824 19.9492 10.0941 20H9.91211C9.5418 19.9633 9.21328 19.7418 8.99336 19.4488C8.81484 19.2199 8.70586 18.9484 8.57227 18.693C8.08945 17.7305 7.61133 16.7652 7.12539 15.8039C5.47969 15.8051 3.83398 15.8055 2.18867 15.8039C1.63594 15.8098 1.08398 15.5988 0.682422 15.218C0.270703 14.8375 0.0257813 14.2914 0 13.7328V2.08789C0.0195312 1.55586 0.237891 1.03281 0.6125 0.653516C0.995703 0.255469 1.53672 0.0195312 2.08828 0ZM9.82148 2.52031C9.39375 2.56055 8.98398 2.75859 8.68477 3.06641C8.35352 3.40117 8.16172 3.86758 8.15977 4.33828C8.15781 5.23594 8.15898 6.1332 8.15898 7.03047C8.15664 7.34727 8.23281 7.66484 8.38633 7.94219C8.65039 8.42656 9.1418 8.78086 9.68672 8.87148C10.1895 8.96094 10.7266 8.82695 11.1277 8.51094C11.5699 8.17305 11.8395 7.62461 11.8402 7.06836C11.8426 6.17109 11.841 5.27422 11.841 4.37734C11.8422 4.06992 11.7711 3.76133 11.6254 3.48984C11.291 2.84219 10.5469 2.43906 9.82148 2.52031ZM9.77852 10.2531C9.13906 10.325 8.55898 10.7613 8.30898 11.3539C8.07227 11.8953 8.12109 12.55 8.4375 13.0496C8.72266 13.5125 9.22227 13.8367 9.76289 13.9035C10.2668 13.9719 10.7957 13.8176 11.1828 13.4879C11.5977 13.143 11.8461 12.6086 11.8395 12.0687C11.8398 11.5137 11.5707 10.9672 11.1309 10.6289C10.7531 10.3309 10.2555 10.1938 9.77852 10.2531Z','M9.86133 3.69653C10.2535 3.60005 10.6727 3.93208 10.6684 4.33559C10.6703 5.24692 10.6699 6.15864 10.6684 7.07036C10.6711 7.42348 10.352 7.73637 9.99883 7.727C9.6461 7.73559 9.32735 7.42153 9.33165 7.0684C9.33008 6.15864 9.33008 5.24848 9.33165 4.33872C9.33047 4.03559 9.56446 3.75473 9.86133 3.69653Z','M9.85627 11.4266C10.1684 11.352 10.5137 11.538 10.6235 11.8387C10.7399 12.1216 10.6266 12.4719 10.3703 12.6368C10.1301 12.8024 9.78322 12.7817 9.56525 12.588C9.35275 12.4114 9.27228 12.0973 9.37541 11.8407C9.45353 11.6341 9.64064 11.4735 9.85627 11.4266Z'], activeColor: '#26397F', inactiveColor: '#828892' }
  ];

  const handleItemClick = (index) => {
    setOpenIndex(openIndex === index ? null : index);
    setOpenSubIndex(null); 
  };

  const handleSubItemClick = (subIndex) => {
    setOpenSubIndex(openSubIndex === subIndex ? null : subIndex);
  };

  
  return (
    <div className='z-40 w-full'>
    <div className={`z-30 transition-all duration-700 fixed xl:block w-[240px] h-screen bg-white border-l pt-7 px-4 ${navbar ? (sidebar ? 'right-0' : 'right-[-15rem]') : sidebar ? 'right-0' : 'right-[-15rem]'}`}>

      <img src="/svg/dubz-icon.svg" alt="" className="mb-7 w-[81px] h-[61px] mx-auto" />

      <ul className="grid gap-2">
      {navItems.map((item, index) => (
        <div key={index}>
          {!item.subset ? (
          <Link to={item.path} key={index}>
            <li
              onClick={() => handleItemClick(index)}
              className={`relative flex h-[48px] items-center gap-3 pr-5 rounded-[8px] cursor-pointer ${
                location.pathname === item.path ? 'bg-[#E9EBF2] text-[#26397F]' : ''
              }`}
            >
            <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                 {Array.isArray(item.icon) ? (
                   item.icon.map((path, idx) => (
                     <path key={idx} d={path} fill={location.pathname === item.path ? item.activeColor : item.inactiveColor} />
                   ))
                 ) : (
                   <path d={item.icon} fill={location.pathname === item.path ? item.activeColor : item.inactiveColor} />
                 )}
                 </svg>
               <p className="text-[14px]">{item.label}</p>
            </li>
          </Link>
          ):(<li
              onClick={() => handleItemClick(index)}
              className={`relative flex h-[48px] items-center gap-3 pr-5 ${openIndex === index ? 'rounded-tr-[8px] rounded-tl-[8px]' : 'rounded-[8px]'} cursor-pointer ${
                location.pathname.split('/')[1] === item.path.split('/')[1] ? 'bg-[#E9EBF2] text-[#26397F]' : ''
              }`}
            >
            <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                 {Array.isArray(item.icon) ? (
                   item.icon.map((path, idx) => (
                     <path key={idx} d={path} fill={location.pathname.split('/')[1] === item.path.split('/')[1] ? item.activeColor : item.inactiveColor} />
                   ))
                 ) : (
                   <path d={item.icon} fill={location.pathname.split('/')[1] === item.path.split('/')[1] ? item.activeColor : item.inactiveColor} />
                 )}
                 </svg>
               <p className="text-[14px]">{item.label}</p>
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  fill="none"
                  viewBox="0 0 24 24"
                  stroke="currentColor"
                  className={`absolute left-4 h-5 w-5 ml-auto transition-transform transform ${
                    openIndex === index ? 'rotate-180' : ''
                  }`}
                >
                  <path
                    strokeLinecap="round"
                    strokeLinejoin="round"
                    strokeWidth={2}
                    d="M19 9l-7 7-7-7"
                  />
                </svg>
            </li>)}
            {item.subset && openIndex === index && (
            <ul className={`rounded-br-[8px] rounded-bl-[8px] px-2 ${
              location.pathname.split('/')[1] === item.path.split('/')[1] ?  'bg-[#E9EBF2]' : ''
            }`}>
              {item.subset.map((subItem, subIndex) => (
                <Link to={subItem.path} key={subIndex}>
                  <li
                    onClick={() => handleSubItemClick(subIndex)}
                    className={`relative flex h-[48px] items-center gap-3 pr-[3.5rem] rounded-[8px] cursor-pointer text-[13px] ${
                      location.pathname === subItem.path ? 'bg-[#FFFFFF] shadow-lg rounded-[26px]' : ''
                    }`}
                  >
                    {subItem.label}
                  {
                      location.pathname === subItem.path &&
                  <svg className='absolute left-3' width="25" height="25" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                  <g clipPath="url(#clip0_312_3132)">
                  <path d="M1.06724 12.0008C1.06724 18.1184 5.90256 23.0777 11.8672 23.0777C17.8319 23.0777 22.6672 18.1184 22.6672 12.0008C22.6672 5.88314 17.8319 0.923828 11.8672 0.923828C5.90256 0.923828 1.06724 5.88314 1.06724 12.0008Z" stroke="#DBE3EF" strokeWidth="2"/>
                  <path d="M16.8095 11.5214H8.85712L12.3564 7.93231C12.4189 7.86961 12.4687 7.79484 12.5028 7.71225C12.537 7.62967 12.5548 7.54099 12.5553 7.45133C12.5558 7.36161 12.5389 7.27274 12.5056 7.18979C12.4724 7.10684 12.4234 7.03151 12.3616 6.96807C12.2997 6.90468 12.2263 6.85447 12.1454 6.82038C12.0645 6.78628 11.9778 6.76899 11.8904 6.76954C11.8029 6.77004 11.7165 6.78831 11.636 6.82333C11.5555 6.85841 11.4825 6.90942 11.4215 6.97354L6.79366 11.72C6.6697 11.8471 6.6001 12.0196 6.6001 12.1994C6.6001 12.3792 6.6697 12.5516 6.79366 12.6788L11.4215 17.4252C11.4828 17.4883 11.5556 17.5383 11.6359 17.5724C11.7161 17.6065 11.8022 17.624 11.889 17.6239C12.0197 17.6239 12.1475 17.5841 12.2562 17.5096C12.3649 17.4351 12.4496 17.3292 12.4997 17.2053C12.5497 17.0814 12.5628 16.9451 12.5373 16.8136C12.5118 16.6821 12.4488 16.5613 12.3564 16.4665L8.85712 12.8775H14.0092H16.8095C16.9848 12.8775 17.153 12.806 17.2769 12.6788C17.4009 12.5517 17.4706 12.3792 17.4706 12.1994C17.4706 12.0196 17.4009 11.8471 17.2769 11.7199C17.153 11.5927 16.9848 11.5214 16.8095 11.5214Z" fill="#DBE3EF"/>
                  </g>
                  <defs>
                  <clipPath id="clip0_312_3132">
                  <rect width="24" height="24" fill="white"/>
                  </clipPath>
                  </defs>
                  </svg>
                  }
                  </li>
                </Link>
              ))}
            </ul>
              )}
            </div>
          ))}

      </ul>
    </div>
    <div className={`${navbar ? (sidebar ? 'block' : 'hidden') : 'hidden'} z-10 h-screen w-full bg-[#00000077] fixed left-0`} onClick={()=>{dispatch(setSidebar(false))}}></div>
    </div>
  );
}


